import{w as d}from"./C__Wf3JA.js";class a extends Error{}a.prototype.name="InvalidTokenError";function w(t){return decodeURIComponent(atob(t).replace(/(.)/g,(e,o)=>{let r=o.charCodeAt(0).toString(16).toUpperCase();return r.length<2&&(r="0"+r),"%"+r}))}function g(t){let e=t.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return w(e)}catch{return atob(e)}}function f(t,e){if(typeof t!="string")throw new a("Invalid token specified: must be a string");e||(e={});const o=e.header===!0?0:1,r=t.split(".")[o];if(typeof r!="string")throw new a(`Invalid token specified: missing part #${o+1}`);let n;try{n=g(r)}catch(i){throw new a(`Invalid token specified: invalid base64 for part #${o+1} (${i.message})`)}try{return JSON.parse(n)}catch(i){throw new a(`Invalid token specified: invalid json for part #${o+1} (${i.message})`)}}const u=window.localStorage.getItem("jwt_token"),p=d(u),l=d(!!u);let s;function c(){p.set(null)}p.subscribe(t=>{if(s&&clearTimeout(s),t){window.localStorage.setItem("jwt_token",t),l.set(!0);try{const o=f(t).exp*1e3,r=Date.now(),n=o-r;n<=0?(console.warn("Token sudah kedaluwarsa saat dimuat. Logout."),c()):s=setTimeout(()=>{console.log("Sesi berakhir. Logout otomatis."),c()},n)}catch(e){console.error("Gagal mendekode token. Logout.",e),c()}}else window.localStorage.removeItem("jwt_token"),l.set(!1)});export{p as a,l as i};
